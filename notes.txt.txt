GIT URL - April 27 to 4 May :

https://github.com/prabhakarmishra/MSVirtualSession2020-2704.git


- Availability
- Agility
- Resilency 
- Scalability

- DevOps
- Automation

https://spring.io/
https://martinfowler.com/articles/microservices.html
https://en.wikipedia.org/wiki/Fallacies_of_distributed_computing
https://martinfowler.com/bliki/BoundedContext.html
https://en.wikipedia.org/wiki/CAP_theorem
https://en.wikipedia.org/wiki/SOLID
https://12factor.net/
https://spring.io/cloud
https://microservices.io/patterns/data/shared-database.html
https://github.com/spring-cloud-samples/configserver
https://docs.spring.io/spring-boot/docs/current/reference/html/production-ready-features.html
https://microservices.io/patterns/server-side-discovery.html
https://github.com/spring-projects/spring-security/wiki/OAuth-2.0-Migration-Guide
https://github.com/spring-projects
https://www.youtube.com/watch?v=_I94-tJlovg



Single-responsibility Principle

- Isolate - Everything - Isolation !!
- Distributed System
- Single Responsibility - One reason to change...
- High Cohesion (Self Contained System) and Low Coupling (No change coupling)
- Domain Oriented (oriented around business capabilities)
- Middleware is dumb
- Governance 
- Autonomy of teams and services
- Automate everything !!! - "Infrstructure As Code"
- Failure is a first class citizen.
- Polyglot | Polyglot Persistence
- Independent Persistence
- Cross Functional Teams
- Independent code bases and pipelines
- No ACID Transactions
- No 2PC 

A - Atomic
C - Consistency
I - Isolation
D - Durability

Consistency
	Strong Consistency
		Eventual Consistency
	Weak Consistency

Componentization via Services
Organized around Business Capabilities
Products not Projects
Smart endpoints and dumb pipes
Decentralized Governance
Decentralized Data Management
Infrastructure Automation
Design for failure
Evolutionary Design

How big is a microservice?
Microservices and SOA
Many languages, many options
Battle-tested standards and enforced standards
Make it easy to do the right thing
The circuit breaker and production ready code
Synchronous calls considered harmful

Spring Cloud configserver then create microservice

Spring Secuirty 
	- Outh2.0

================================================= docker =================================
docker-machine ls
docker ps
docker start docker-vm1
docker-machine start docker-vm1
docker-machine env docker-vm1
@FOR /f "tokens=*" %i IN ('docker-machine env docker-vm1') DO @%i
docker-machine ls
